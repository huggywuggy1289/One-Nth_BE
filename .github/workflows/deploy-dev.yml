name: Deploy to Development Server

on:
  push:
    branches: [ "develop" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Set application.yml
        run: |
          mkdir -p ./src/main/resources
          cat <<EOF > ./src/main/resources/application.yml
          ${{ secrets.APPLICATION_YML }}
          EOF
        shell: bash

      - name: Grant execute permission for gradle
        run: chmod +x ./gradlew
        shell: bash

      - name: Clean project
        run: ./gradlew clean
        shell: bash

      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: build

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: build/libs/*.jar

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: build-artifacts/

      - name: Copy JAR to EC2
        uses: appleboy/scp-action@v0.1.6
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: build-artifacts/*.jar
          target: /home/${{ secrets.EC2_USERNAME }}/app/myapp.jar

      - name: Restart app on EC2
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            pkill -f 'java -jar /home/${{ secrets.EC2_USERNAME }}/app/myapp.jar' || true
            nohup java -jar /home/${{ secrets.EC2_USERNAME }}/app/myapp.jar > /home/${{ secrets.EC2_USERNAME }}/app/app.log 2>&1 &